#pragma once

// CHANGE: added <fstream> for new std::ifstream member "instream":
#include <fstream>
#include <string>
#include <map>

// Generated by bison:
# include "calc++-parser.hh"

// CHANGE: replaced `#define YY_DECL ...` here with #include of new
// lexer class:
#include "CalcFlexLexer.hh"

// Conducting the whole scanning and parsing of Calc++.
class calcxx_driver
{
public:
    calcxx_driver ();
    virtual ~calcxx_driver ();
    
    std::map<std::string, int> variables;
    
    int result;
    
    // CHANGE: add lexer object as a member
    CalcFlexLexer lexer;

    // CHANGE: add ifstream object as a member
    std::ifstream instream;

    // Handling the scanner.
    void scan_begin ();
    void scan_end ();
    bool trace_scanning;
    
    // Run the parser on file F.
    // Return 0 on success.
    int parse (const std::string& f);
    // The name of the file being parsed.
    // Used later to pass the file name to the location tracker.
    std::string file;
    // Whether parser traces should be generated.
    bool trace_parsing;

    // Error handling.
    void error (const yy::location& l, const std::string& m);
    void error (const std::string& m);
};
